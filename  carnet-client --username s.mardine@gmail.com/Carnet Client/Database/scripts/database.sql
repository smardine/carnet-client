/********************* ROLES **********************/

/********************* UDFS ***********************/

/****************** GENERATORS ********************/

CREATE GENERATOR GEN_CATEGORIE_ID;
CREATE GENERATOR GEN_CLIENT_ID;
CREATE GENERATOR GEN_DOCUMENTS_ID;
CREATE GENERATOR GEN_SECTEUR_ID;
/******************** DOMAINS *********************/

/******************* PROCEDURES ******************/

/******************** TABLES **********************/

CREATE TABLE CATEGORIE
(
  CATEGORIE Varchar(255),
  ID_CATEGORIE Integer
);
CREATE TABLE CLIENT
(
  ID_CLIENT Integer,
  NOM Varchar(255),
  PNOM Varchar(255),
  ADRESSE Varchar(255),
  CP Varchar(255),
  VILLE Varchar(255),
  TEL Varchar(255),
  GSM Varchar(255),
  COMMENTAIRE Varchar(255),
  CATEGORIE Integer,
  SECTEUR Integer
);
CREATE TABLE DOCUMENTS
(
  DOCUMENT_NOM Varchar(255),
  ID_CLIENT Integer,
  EMPLACEMENT Varchar(255),
  ID_DOCUMENT Integer
);
CREATE TABLE SECTEUR
(
  SECTEUR Varchar(255),
  ID_SECTEUR Integer
);
CREATE TABLE VERSION_DB
(
  VERSION_DB Varchar(255)
);
/********************* VIEWS **********************/

/******************* EXCEPTIONS *******************/

/******************** TRIGGERS ********************/

SET TERM ^ ;
CREATE TRIGGER CATEGORIE_BI FOR CATEGORIE ACTIVE
BEFORE INSERT POSITION 0
AS
DECLARE VARIABLE tmp DECIMAL(18,0);
BEGIN
  IF (NEW.ID_CATEGORIE IS NULL) THEN
    NEW.ID_CATEGORIE = GEN_ID(GEN_CATEGORIE_ID, 1);
  ELSE
  BEGIN
    tmp = GEN_ID(GEN_CATEGORIE_ID, 0);
    if (tmp < new.ID_CATEGORIE) then
      tmp = GEN_ID(GEN_CATEGORIE_ID, new.ID_CATEGORIE-tmp);
  END
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER CLIENT_BI FOR CLIENT ACTIVE
BEFORE INSERT POSITION 0
AS
DECLARE VARIABLE tmp DECIMAL(18,0);
BEGIN
  IF (NEW.ID_CLIENT IS NULL) THEN
    NEW.ID_CLIENT = GEN_ID(GEN_CLIENT_ID, 1);
  ELSE
  BEGIN
    tmp = GEN_ID(GEN_CLIENT_ID, 0);
    if (tmp < new.ID_CLIENT) then
      tmp = GEN_ID(GEN_CLIENT_ID, new.ID_CLIENT-tmp);
  END
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER DOCUMENTS_BI FOR DOCUMENTS ACTIVE
BEFORE INSERT POSITION 0
AS
DECLARE VARIABLE tmp DECIMAL(18,0);
BEGIN
  IF (NEW.ID_DOCUMENT IS NULL) THEN
    NEW.ID_DOCUMENT = GEN_ID(GEN_DOCUMENTS_ID, 1);
  ELSE
  BEGIN
    tmp = GEN_ID(GEN_DOCUMENTS_ID, 0);
    if (tmp < new.ID_DOCUMENT) then
      tmp = GEN_ID(GEN_DOCUMENTS_ID, new.ID_DOCUMENT-tmp);
  END
END^
SET TERM ; ^
SET TERM ^ ;
CREATE TRIGGER SECTEUR_BI FOR SECTEUR ACTIVE
BEFORE INSERT POSITION 0
AS
DECLARE VARIABLE tmp DECIMAL(18,0);
BEGIN
  IF (NEW.ID_SECTEUR IS NULL) THEN
    NEW.ID_SECTEUR = GEN_ID(GEN_SECTEUR_ID, 1);
  ELSE
  BEGIN
    tmp = GEN_ID(GEN_SECTEUR_ID, 0);
    if (tmp < new.ID_SECTEUR) then
      tmp = GEN_ID(GEN_SECTEUR_ID, new.ID_SECTEUR-tmp);
  END
END^
SET TERM ; ^

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON CATEGORIE TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON CLIENT TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON DOCUMENTS TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON SECTEUR TO  SYSDBA WITH GRANT OPTION;

GRANT DELETE, INSERT, REFERENCES, SELECT, UPDATE
 ON VERSION_DB TO  SYSDBA WITH GRANT OPTION;

